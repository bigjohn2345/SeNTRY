--framework declarations
local discordia = require('discordia')
local client = discordia.Client()
local vip = "216004345739608065" --making this a string then converting isnt necessary but i like it because redundancy IT ACTUALLY IS BWOAH


--setup the functions i like
function wait(seconds) --wait time
  local start = os.time()
  repeat until os.time() > start + seconds
end

function string.startswith(String,Start)
   return string.sub(String,1,string.len(Start))==Start
end

function toTable(...) --covert iterator to table, pass function that returns iterator
  local arr = {}
  for v in ... do
    arr[#arr + 1] = v
  end
  return arr
end

function respondError(channel,reason) --easy way to send errors in chat
	channel:send {
	embed = {
		title = "There were errors with completing your request",
		fields = {
		{name = "Error 1:", value = tostring(reason), inline = true},
		},
		color = discordia.Color.fromRGB(255,0,0).value,
		timestamp = discordia.Date():toISO('T', 'Z')
	}
	}
end

function chatLog(channel,type,action,optuser) --preformatted log messages, optuser optional
	channel:send {
	embed = {
		title = "Action occured: "..tostring(type),
		if optuser ~= nil then
			fields = {
				{name = "Details: ", value = tostring(action), inline = true},
				{name = "Responsible user: ", value = tostring(optuser), inline = true},
			},
		else
			fields = {
				{name = "Details:", value = tostring(action), inline = true},
			},
		end
		color = discordia.Color.fromRGB(255,168,38).value,
		timestamp = discordia.Date():toISO('T', 'Z')
	}
	}
end

function CheckCommands(cmd) -runs the arg through a TON of if statements
	
end

function AttachListener(msg) -idk do we really need to
	
end

--subscribe to events we want

client:on('ready', function()
--[[ (DISABLED BECAUSE ODD RATELIMITS)
	local gamewheel = coroutine.create(function() --make the coroutine here so it cant complain about no client, maybe fixed in 2.0 but not risking it
		while true do
			client:setGame("SeNTRY 2.1A")
			wait(5)
			client:setGame("Status: OK")
			wait(5)
			client:setGame("by bigjohn2345")
			wait(5)
		end
	end) ]]--
	--coroutine.resume(gamewheel) --DISABLED
--end mothballed init code
	print('success Logged in as '.. client.user.username)
	client:setGame("SeNTRY 2.1")

end)

client:on('messageCreate', function(message) --do message stuff
	AttachListener(cmd)
	if string.startswith(tostring(message.content),"//") == true then
		CheckCommands(cmd)
	end
end)

client:on('messageDelete', function(message) --log message deletions in the appropriate place
	local place = message.Guild
end)

client:on('messageUpdate', function(message) --log edited messages
	local place = message.Guild
end)

--set up the client itself so i can use it, keep last
--fix this later needs a token



